{"version":3,"sources":["jquery.js"],"names":["window","jQuery","selectorOrArray","elements","document","querySelectorAll","Array","oldApi","addClass","className","i","length","classList","add","find","selector","array","elements2","from","concat","newApi","end","each","fn","call","parent","node","indexOf","parentNode","push","print","console","log","children","$"],"mappings":";AA2EA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA3EAA,OAAOC,OAAS,SAAUC,GACpBC,IAAAA,EAQG,MAPwB,iBAApBD,EACTC,EAAWC,SAASC,iBAAiBH,GAC5BA,aAA2BI,QACpCH,EAAWD,GAIN,CACLK,OAAQL,EAAgBK,OAExBC,SAASC,SAAAA,GACF,IAAA,IAAIC,EAAI,EAAGA,EAAIP,EAASQ,OAAQD,IACnCP,EAASO,GAAGE,UAAUC,IAAIJ,GAErB,OAAA,MAGTK,KAAKC,SAAAA,GAEE,IADDC,IAAAA,EAAQ,GACHN,EAAI,EAAGA,EAAIP,EAASQ,OAAQD,IAAK,CAClCO,IAAAA,EAAYX,MAAMY,KAAKf,EAASO,GAAGL,iBAAiBU,IAC1DC,EAAQA,EAAMG,OAAOF,GAMhBG,OAHPJ,EAAMT,OAAS,KAEAN,OAAOe,IAIxBK,IAAM,WAEG,OAAA,KAAKd,QAGde,KAAKC,SAAAA,GACE,IAAA,IAAIb,EAAI,EAAGA,EAAIP,EAASQ,OAAQD,IACnCa,EAAGC,KAAK,KAAMrB,EAASO,GAAIA,GAEtB,OAAA,MAGTe,OAAS,WACDT,IAAAA,EAAQ,GAMPf,OALFqB,KAAAA,KAAK,SAACI,IAC+B,IAApCV,EAAMW,QAAQD,EAAKE,aACrBZ,EAAMa,KAAKH,EAAKE,cAGb3B,OAAOe,IAEhBc,MAAQ,WACNC,QAAQC,IAAI7B,IAGd8B,SAAW,WACHjB,IAAAA,EAAQ,GAIPf,OAHFqB,KAAAA,KAAK,SAACI,GACTV,EAAMa,KAANb,MAAAA,EAAcU,EAAAA,EAAKO,aAEdhC,OAAOe,MAapBhB,OAAOkC,EAAIlC,OAAOC","file":"jquery.830d0d5b.js","sourceRoot":"..\\src","sourcesContent":["window.jQuery = function (selectorOrArray) {\r\n  let elements\r\n  if (typeof selectorOrArray === 'string') {\r\n    elements = document.querySelectorAll(selectorOrArray)\r\n  } else if (selectorOrArray instanceof Array) {\r\n    elements = selectorOrArray\r\n  }\r\n  //api 可以操作elements\r\n  //闭包：函数访问外部的变量s\r\n  return {\r\n    oldApi: selectorOrArray.oldApi,\r\n    //添加类名\r\n    addClass(className) {\r\n      for (let i = 0; i < elements.length; i++) {\r\n        elements[i].classList.add(className)\r\n      }\r\n      return this\r\n    },\r\n    //查找\r\n    find(selector) {\r\n      let array = []\r\n      for (let i = 0; i < elements.length; i++) {\r\n        const elements2 = Array.from(elements[i].querySelectorAll(selector))\r\n        array = array.concat(elements2)\r\n      }\r\n      //添加老的api对象\r\n      array.oldApi = this\r\n      //返回一个新的api对象:newApi\r\n      const newApi = jQuery(array)\r\n      return newApi\r\n    },\r\n    //返回到api/返回上一个api\r\n    end() {\r\n      //此时的this是新的api\r\n      return this.oldApi\r\n    },\r\n    //遍历\r\n    each(fn) {\r\n      for (let i = 0; i < elements.length; i++) {\r\n        fn.call(null, elements[i], i)\r\n      }\r\n      return this\r\n    },\r\n    //获取父亲元素\r\n    parent() {\r\n      const array = []\r\n      this.each((node) => {\r\n        if (array.indexOf(node.parentNode) === -1) {\r\n          array.push(node.parentNode)\r\n        }\r\n      })\r\n      return jQuery(array)\r\n    },\r\n    print() {\r\n      console.log(elements)\r\n    },\r\n    //儿子节点\r\n    children() {\r\n      const array = []\r\n      this.each((node) => {\r\n        array.push(...node.children)\r\n      })\r\n      return jQuery(array)\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n//使用$\r\nwindow.$ = window.jQuery"]}